#-
# ==========================================================================
# Copyright (C) 2018 - 2020 Ocean Cloud Rendering. and/or its licensors.  All
# rights reserved.
#
# The coded instructions, statements, computer programs, and/or related
# material (collectively the "Data") in these files contain unpublished
# information proprietary to RenderShare. ("RenderShare") and/or its
# licensors, which is protected by Canadian federal copyright
# law and by international treaties.
#
# The Data is provided for use exclusively by You. You have the right
# to use, and incorporate this Data into other products for
# purposes authorized by the RenderShare software license agreement,
# without fee.
#
# The copyright notices in the Software and this entire statement,
# including the above license grant, this restriction and the
# following disclaimer, must be included in all copies of the
# Software, in whole or in part, and all derivative works of
# the Software, unless such copies or derivative works are solely
# in the form of machine-executable object code generated by a
# source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
# RenderShare DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED
# WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF
# NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR
# PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR
# TRADE PRACTICE. IN NO EVENT WILL RenderShare AND/OR ITS LICENSORS
# BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
# DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF RenderShare
# AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY
# OR PROBABILITY OF SUCH DAMAGES.
#
# ==========================================================================
#+

import os
import sys
import clr
import json
import requests
from pprint import pprint

from System import *
from System.Diagnostics import *
from Deadline.Scripting import *
from Deadline.Jobs import *
from System.IO import *
from Deadline.Plugins import *
from System.Collections.Specialized import StringCollection

def get_callback_job(current_job):

    callback_job = None
    callback_job_id = None

    # get callback job id if exists
    callback_job_id = current_job.GetJobExtraInfoKeyValueWithDefault("CallbackJobID", str())
    if callback_job_id:
        callback_job = RepositoryUtils.GetJob(callback_job_id, True)
        print "Target job already set with ID : %s" % str(callback_job.JobId)
    else:
        jobs = RepositoryUtils.GetJobs(True)
        for job in jobs:
            if job.JobName == current_job.JobName + "_Callback":
                callback_job = RepositoryUtils.GetJob(job.JobId, True)
                callback_job_id = callback_job.JobId
                print "Target job found in database with ID : %s" % str(callback_job.JobId)
                print "Set callback job id as extra info"
                current_job.SetJobExtraInfoKeyValue("CallbackJobID", callback_job.JobId)
                RepositoryUtils.SaveJob(current_job)
                break

    return callback_job, callback_job_id


def update_callback_job(DeadlinePlugin, job):

    current_job = DeadlinePlugin.GetJob()
    current_task = DeadlinePlugin.GetCurrentTaskId()
    print "current_job : %s  | current_task : %s" % (current_job, current_task)

    callback_job, callback_job_id = get_callback_job(current_job)

    tasks = list(RepositoryUtils.GetJobTasks(callback_job, True).TaskCollectionAllTasks)
    print "Resume taks ID : %s" % current_task
    RepositoryUtils.ResumeTasks(callback_job, [tasks[int(current_task)]])


def __main__(*args):

    print " Running RBKeyshot Post Task Script"
    DeadlinePlugin = args[0]

    job = DeadlinePlugin.GetJob()
    update_callback_job(DeadlinePlugin, job)


